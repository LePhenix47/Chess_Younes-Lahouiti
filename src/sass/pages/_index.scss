@use "../utils/" as *;

.index {
    @include center-flex-column(20px);

    --_square-size: 100px;

    overflow: hidden;
}

.sprite-cranberry {
    display: none;
}

@keyframes blinker {
    to {
        background-color: var(--_init-bg-color);
    }
}

@view-transition {
    navigation: auto;
}


::view-transition-group(chess-board) {}

.chess {
    &__board {

        view-transition-name: chess-board;

        container-type: inline-size;
        container-name: chess-board;

        isolation: isolate;

        display: grid;
        grid-template-columns: repeat(8, var(--_square-size));
        grid-template-rows: repeat(8, var(--_square-size));
        justify-content: center;
        align-content: center;

        position: relative;

        border-radius: 5px;

        touch-action: none;
        user-select: none;

        @include mobile-only {
            --_square-size: max((100cqi/ 8), 35px);
        }

        &.black-perspective {
            rotate: 180deg;

            & *:is(.chess__square, .chess__piece) {
                rotate: 180deg;
            }

            & .chess__piece {}

            & .chess__label--rank {
                justify-self: end;
                align-self: end;
            }

            & .chess__label--file {
                justify-self: start;
                align-self: start;
            }
        }
    }

    &__square {
        display: grid;
        grid-template-areas: "stack";
        position: relative;


        &[data-available-move] {

            &:not([data-occupied-by])::before {
                content: "";
                position: absolute;
                top: 50%;
                left: 50%;
                translate: -50% -50%;

                --_circle-diameter: 35%;
                width: var(--_circle-diameter);
                height: var(--_circle-diameter);
                background-color: rgb(0, 0, 0, 50%);

                border-radius: 50%;
            }

            &[data-occupied-by] {
                --_thickness: 1.5cqi;

                outline: var(--_thickness) solid rgba(9, 178, 2, 50%);
                outline-offset: calc(-1 * var(--_thickness));
            }
        }

        &[data-checked]::after {
            --_blur-transparency: 80%;
            --_diameter: 40%;
            --_color: rgba(255, 0, 0, 85%);

            background-image: radial-gradient(circle at center, var(--_color) var(--_diameter), transparent var(--_blur-transparency));

            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;

            opacity: 0;
            animation: fade-in 150ms ease-in-out forwards;
        }

        &[data-last-move].light-square {
            background-color: #cdd26a;
        }

        &[data-last-move].dark-square {
            background-color: #aaa23a;
        }

        &[data-drag-hover] {
            --_thickness: 0.75cqi;
            box-shadow: inset 0 0 0 var(--_thickness) white;

            @include mobile-only {
                box-shadow: none;

                &::after {
                    content: "";
                    position: absolute;

                    top: 0 !important;
                    left: 0 !important;

                    width: 100% !important;
                    height: 100% !important;
                    background-color: rgb(37, 37, 37) !important;
                    background-image: none;

                    translate: 0 0 !important;


                    border-radius: 50% !important;

                    opacity: 65% !important;
                    animation: none !important;
                    scale: 1.25;

                    z-index: 2;
                }
            }
        }

        &.light-square {
            --_init-bg-color: var(--chess-light-square-color);
            background-color: var(--chess-light-square-color);
        }

        &.dark-square {
            --_init-bg-color: var(--chess-dark-square-color);
            background-color: var(--chess-dark-square-color);
        }

        &.light-square[data-selected-square] {
            background-color: gold;
        }

        &.dark-square[data-selected-square] {
            background-color: goldenrod;
        }

        &:nth-child(1 of .chess__square) {
            border-top-left-radius: inherit;
        }

        &:nth-child(8 of .chess__square) {
            border-top-right-radius: inherit;
        }

        &:nth-last-child(8 of .chess__square) {
            border-bottom-left-radius: inherit;
        }

        &:nth-last-child(1 of .chess__square) {
            border-bottom-right-radius: inherit;
        }

        &.light-square.test {
            background-color: hsla(75, 100%, 50%, 100%);
        }

        &.dark-square.test {
            background-color: hsla(75, 100%, 50%, 65%);
        }

        &.blinking {
            --_color-blink-duration: 0.5s;
            animation: blinker calc(var(--_color-blink-duration) * 2) steps(2, start) infinite;
            background-color: purple;
        }


    }

    &__label {
        font-family: system-ui;
        font-size: clamp(12px, 2.5cqi, 64px);

        padding: 5px;
        user-select: none;

        grid-area: stack;

        height: fit-content;
        width: fit-content;

        // x axis
        &--rank {
            justify-self: start;
            align-self: start;
        }

        // y axis
        &--file {
            justify-self: end;
            align-self: end;
        }


        &--light {
            color: var(--chess-light-square-color);
        }

        &--dark {
            color: var(--chess-dark-square-color);
        }
    }

    &__piece {
        position: absolute;

        --_piece-transition-duration: 150ms;
        --_piece-transition-timing-function: ease-in-out;

        // ? For positioning pieces
        --_index-x: 0px;
        --_index-y: 0px;

        // ? Compensation for the CSS's axis which are flipped
        --_rank: var(--_index-y);
        --_file: var(--_index-x);

        left: calc(var(--_rank) * var(--_square-size));
        top: calc(var(--_file) * var(--_square-size));

        transition: top var(--_piece-transition-duration) var(--_piece-transition-timing-function), left var(--_piece-transition-duration) var(--_piece-transition-timing-function);

        width: var(--_square-size);
        height: var(--_square-size);

        display: flex;

        touch-action: none;
        user-select: none;

        &>.piece-debug {
            position: absolute;
            right: 0;
            top: 0;

            color: black;
        }

        &.dragging {
            // ? For the Drag and Drop behavior
            --_drag-x: 0px;
            --_drag-y: 0px;

            left: var(--_drag-x);
            top: var(--_drag-y);

            will-change: left, top;
            transform: translateZ(0);
        }

        &.no-transition {
            transition: none;

        }

        &.z-index {
            z-index: 5;
        }

        &.captured {
            --_capture-timing-function: var(--_piece-transition-timing-function);
            transition: opacity var(--_piece-transition-duration) var(--_capture-timing-function);

            opacity: 0;
        }

        &>svg {
            pointer-events: none;
        }

        &:hover {
            cursor: grab;
        }

        &:active {
            cursor: grabbing;
        }

    }


    &__promotion-container {
        position: absolute;
        top: 0;
        left: 0;
    }

    &__promotion-popup-backdrop {}

    &__promotion-popup {
        position: fixed;

        left: var(--_left);
        top: var(--_top);

        translate: 0 0;

        background-color: rgb(0, 0, 0, 75%);

        border: none;

        border-radius: 5px;

        &--opponent-view {
            translate: 0 calc(-100% + var(--_square-size));

            &>.chess__promotion-list {
                flex-direction: column-reverse;

            }
        }

        @include mobile-only {
            top: auto;
            bottom: 0;
            left: 0;

            width: 100%;

            translate: 0 0;
        }
    }

    &__promotion-popup-backdrop {
        position: fixed;
        top: 0;
        left: 0;

        background-color: rgb(0, 0, 0, 25%);
        width: 100%;
        height: 100%;
    }

    &__promotion-list {
        display: flex;
        flex-direction: column;



        @include mobile-only {
            flex-direction: column-reverse !important;

        }
    }

    &__promotion-item {
        @include center-flex;

        overflow: hidden;
    }

    &__promotion-cancel-button {
        font-size: 16px;
        width: 100%;

        display: inline-block;

        color: white;
    }

    &__promotion-piece {
        display: inline-flex;
        align-items: center;

        width: var(--_square-size);
        height: var(--_square-size);

        border: none;
        outline: none;

        background-color: rgba(255, 255, 255, 0.25);

        transition: scale 150ms ease-in-out;

        &:hover {
            scale: 110%;
            background-color: grey;
        }

        @include mobile-only {
            width: 100%;
            height: auto;

            &>svg {
                width: 75px;
                height: 75px;
            }

            column-gap: 10px;

            &:hover {
                scale: 100%;
            }
        }
    }

    &__promotion-piece-name {
        display: none;

        color: white;

        @include mobile-only {
            // ?Not using display: flex because it doesn't work with the ::first-letter pseudo element
            display: block;

            font-size: 24px;

            &::first-letter {
                text-transform: uppercase;
            }
        }
    }
}